{"version":3,"sources":["RUTA.png","TitleScreen.js","MapScreen.js","withTransition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Page","styled","div","Header","Logo","Form","form","AddressField","TextField","attrs","variant","RemoveIconButton","IconButton","Stop","AddIcon","AddCircleOutlineIcon","color","green1","RemoveIcon","RemoveCircleOutlineIcon","Divider","HR","DoneButton","Button","green","TitleScreen","next","React","useState","id","address","stops","setStops","removeStop","filter","stop","src","logo","alt","Typography","label","required","map","key","value","placeholder","onChange","e","target","size","onClick","newId","length","push","fontSize","type","defaultValue","moment","format","substring","InputLabelProps","shrink","Card","CardItem","StyledMap","Map","GoButton","GoogleApiWrapper","apiKey","google","time","distance","path","link","card","component","href","pose","from","x","moveLeft","enter","transition","ease","duration","exit","Container","withTransition","Component","posed","forwardRef","passThrough","ref","theme","createMuiTheme","typography","fontFamily","palette","primary","main","light","secondary","red","PosedTitleScreen","PosedMapScreen","MapScreen","App","screen","setScreen","screens","console","log","ThemeProvider","StylesProvider","injectFirst","preEnterPose","ReactDOM","render","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77e0d18e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RUTA.291a401a.png\";","import React from \"react\";\nimport logo from \"./RUTA.png\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\n\nimport {\n   Button,\n   Divider as HR,\n   Typography,\n   TextField,\n   IconButton,\n} from \"@material-ui/core\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\n\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nimport {color} from \"./constants\";\n\nconst Page = styled.div`\n   height: 100%;\n   width: 100%;\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n`;\n\nconst Header = styled.div`\n   display: flex;\n   flex-flow: column nowrap;\n   justify-content: center;\n   align-items: center;\n   padding: 24px 0;\n   img {\n      top: -3px;\n      left: -64px;\n      width: 128px;\n   }\n`;\n\nconst Logo = styled.div`\n   display: flex;\n   flex-flow: row nowrap;\n   justify-content: center;\n`;\n\nconst Form = styled.form`\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n`;\n\nconst AddressField = styled(TextField).attrs({variant: \"outlined\"})`\n   margin: 8px 0;\n`;\n\nconst RemoveIconButton = styled(IconButton)``;\n\nconst Stop = styled.div`\n   position: relative;\n   ${RemoveIconButton} {\n      position: absolute;\n      top: 22px;\n      right: -36px;\n   }\n`;\n\nconst AddIcon = styled(AddCircleOutlineIcon)`\n   color: ${color.green1};\n`;\n\nconst RemoveIcon = styled(RemoveCircleOutlineIcon)`\n   color: ${color.green1};\n`;\n\nconst Divider = styled(HR)`\n   height: 5px;\n`;\n\nconst DoneButton = styled(Button)`\n   background: ${color.green};\n   color: white;\n   margin: 24px 0;\n   height: 48px;\n\n   &:hover {\n      background: ${color.green1};\n   }\n`;\n\nfunction TitleScreen({next}) {\n   const [stops, setStops] = React.useState([{id: 0, address: \"\"}]);\n\n   const changeStop = id => e => {\n      setStops(\n         stops.map(stop =>\n            stop.id === id ? {id: id, address: e.target.value} : stop,\n         ),\n      );\n   };\n\n   const addStop = () => {\n      const newId = stops[stops.length - 1].id + 1;\n      stops.push({id: newId, address: \"\"});\n      setStops([...stops]);\n   };\n\n   const removeStop = id => () => {\n      setStops(stops.filter(stop => stop.id !== id));\n   };\n\n   return (\n      <Page>\n         <Header>\n            <img src={logo} alt=\"logo\" />\n            <Logo>\n               <Typography variant=\"h2\" color=\"primary\">\n                  RUTA\n               </Typography>\n            </Logo>\n            <Typography variant=\"h6\" color=\"secondary\">\n               Mapped solution â€” no sweat\n            </Typography>\n         </Header>\n         <Form>\n            <Typography variant=\"h6\" color=\"primary\">\n               Where do you plan to go?\n            </Typography>\n            <AddressField label=\"From\" required color=\"secondary\" />\n            {stops.map(stop => (\n               <Stop key={stop.id}>\n                  <AddressField\n                     value={stop.address}\n                     label=\"Stop\"\n                     placeholder=\"...\"\n                     onChange={changeStop(stop.id)}\n                  />\n                  <RemoveIconButton size=\"small\" onClick={removeStop(stop.id)}>\n                     <RemoveIcon />\n                  </RemoveIconButton>\n               </Stop>\n            ))}\n            <IconButton onClick={addStop}>\n               <AddIcon fontSize=\"large\" />\n            </IconButton>\n            <AddressField label=\"To\" required color=\"secondary\" />\n\n            <Divider />\n\n            <Typography variant=\"h6\" color=\"primary\">\n               Depart at?\n            </Typography>\n            <AddressField\n               label=\"Time\"\n               type=\"datetime-local\"\n               // defaultValue=\"2017-05-24T10:30\"\n               defaultValue={moment()\n                  .format()\n                  .substring(0, 16)}\n               InputLabelProps={{\n                  shrink: true,\n               }}\n            />\n            <DoneButton onClick={next}>Show my fastest route!</DoneButton>\n         </Form>\n      </Page>\n   );\n}\n\nexport default TitleScreen;\n","import React from \"react\";\nimport logo from \"./RUTA.png\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport {color} from \"./constants\";\n\nimport {Map, GoogleApiWrapper, Marker} from \"google-maps-react\";\n\nimport {\n   Button,\n   Divider as HR,\n   Typography,\n   TextField,\n   IconButton,\n} from \"@material-ui/core\";\n\nconst Page = styled.div`\n   height: 100%;\n   width: 100%;\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n   overflow: visible;\n   postion: relative;\n`;\n\nconst Card = styled.div`\n   display: flex;\n   flex-flow: row nowrap;\n   width: 100%;\n   height: 150px;\n   position: absolute;\n   bottom: 0;\n   left: 0;\n   background: white;\n   justify-content: space-between;\n   align-items: center;\n`;\n\nconst CardItem = styled.div`\n   flex: 1;\n   display: flex;\n   flex-flow: column nowrap;\n   padding: 24px;\n`;\nconst StyledMap = styled(Map)``;\n\nconst GoButton = styled(Button)`\n   color: white;\n   background: ${color.green};\n   &:hover {\n      background: ${color.green1};\n   }\n`;\nfunction MapScreen({google}) {\n   const cards = [\n      {\n         time: \"17 min\",\n         distance: \"5.4 mi\",\n         path: \"Cal Poly -> Chipotle -> Costco -> CVS\",\n         link: \"https://www.google.com/maps/dir/Cal+Poly,+San+Luis+Obispo,+CA/Chipotle+Mexican+Grill,+Madonna+Road,+San+Luis+Obispo,+CA/Costco+Gasoline,+Froom+Ranch+Way,+San+Luis+Obispo,+CA/CVS,+Madonna+Road,+San+Luis+Obispo,+CA/@35.2777958,-120.7079472,13z/data=!3m1!4b1!4m26!4m25!1m5!1m1!1s0x80ecf1b4054c3551:0x98b3b48a29d99103!2m2!1d-120.6624942!2d35.3050053!1m5!1m1!1s0x80ecf0c2ac99dc6b:0x97530a30128c52d3!2m2!1d-120.6776981!2d35.2626146!1m5!1m1!1s0x80ecf0b8523c8637:0xb7865f6380fdb6f!2m2!1d-120.6915208!2d35.2509527!1m5!1m1!1s0x80ecf0bf8edc0657:0x67a60200b911105!2m2!1d-120.6896385!2d35.2578584!3e0\",\n      },\n   ];\n\n   return (\n      <Page>\n         <StyledMap google={google}></StyledMap>\n         {cards.map(card => (\n            <Card key={card}>\n               <CardItem>\n                  <Typography variant=\"h5\" color=\"primary\">{card.time}</Typography>\n                  <Typography color=\"secondary\">{card.distance}</Typography>\n                  <Typography>{card.path}</Typography>\n               </CardItem>\n               <CardItem>\n                  <GoButton component=\"a\" href={card.link}>\n                     GO\n                  </GoButton>\n               </CardItem>\n            </Card>\n         ))}\n      </Page>\n   );\n}\n\nexport default GoogleApiWrapper({\n   apiKey: \"AIzaSyA8O9T0kXIML1T2y9F0UorRWZ-P43zCSmc\",\n})(MapScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport posed from \"react-pose\";\n\nconst pose = {\n   from: {\n      x: ({moveLeft}) => (moveLeft ? \"100vw\" : \"-100vw\"),\n   },\n   enter: {\n      x: 0,\n      transition: {\n         ease: \"linear\",\n         duration: 200,\n      },\n   },\n   exit: {\n      x: ({moveLeft}) => (moveLeft ? \"-100vw\" : \"100vw\"),\n      transition: {\n         ease: \"linear\",\n         duration: 200,\n      },\n   },\n};\n\nconst Container = styled.div`\n   height: 100%;\n   width: 100%;\n   position: absolute;\n`;\n\nfunction withTransition(Component) {\n   return posed(\n      React.forwardRef((passThrough, ref) => (\n         <Container ref={ref}>\n            <Component {...passThrough} />\n         </Container>\n      )),\n   )(pose);\n}\n\nexport default withTransition;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport {StylesProvider} from \"@material-ui/styles\";\nimport {ThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport {color} from \"./constants\";\nimport Div100vh from \"react-div-100vh\";\nimport \"typeface-rubik\";\nimport TitleScreen from \"./TitleScreen\";\nimport MapScreen from \"./MapScreen\";\nimport withTransition from \"./withTransition\";\n\nimport {PoseGroup} from \"react-pose\";\n\nconst theme = createMuiTheme({\n   typography: {\n      fontFamily: \"Rubik\",\n   },\n   palette: {\n      primary: {\n         main: color.green,\n         light: color.green1,\n      },\n      secondary: {\n         main: color.red,\n      },\n   },\n});\n\nconst PosedTitleScreen = withTransition(TitleScreen);\nconst PosedMapScreen = withTransition(MapScreen);\n\nfunction App() {\n   const [screen, setScreen] = React.useState(0);\n   const nextScreen = () => {\n      setScreen(screen + 1);\n   };\n\n   const screens = [\n      <PosedTitleScreen key={0} next={nextScreen} />,\n      <PosedMapScreen key={1} />,\n   ];\n   console.log(screen);\n   return (\n      <ThemeProvider theme={theme}>\n         <StylesProvider injectFirst>\n            <Div100vh>\n               <PoseGroup preEnterPose=\"from\" moveLeft>\n                  {screens[screen]}\n               </PoseGroup>\n            </Div100vh>\n         </StylesProvider>\n      </ThemeProvider>\n   );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}